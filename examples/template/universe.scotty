{#t host,environment,application,datasource #}

#
# Application Classes
#
{#
 Type type = database.getContained().get("application");
 Set set = new TreeSet();
  for (Instance i : type.getContained().values()) {
     if (i.containsKey("app")) {
          Value value = i.getValue("app");
          for (String aValue : value.values()) {
             set.add(aValue);
          }
     }
 }

 output.print("applications=");
 boolean first = true;
 for (String value : set) {
    if (first) {
        first = false;
    } else {
        output.print(',');
    }
    output.print(value);
 }

 output.print("\n\n");

 String[] display = new String[]{"name","port","artifactName","repoPath","mainUrl","serviceUrl","jmxPort","protocol","statusUrl"};

 for (String key : set)
 {
    Context c = new Context(null, "type=application,app=" + key);
    List matches = database.query(c);

    Instance i = matches.get(0);

       String prefix = key + ".";
       for (String attr : display) {
           if (i.containsKey(attr)) {
              output.format("%s%s=%s\n", new Object[]{prefix, attr, i.get(attr)});
           }
       }
       output.print('\n');

 }

#}
#
# Databases Instances by Name.Env (Datasource by Name.Env.Host)
#
{#
  Type type = database.getContained().get("datasource");
  Set set = new TreeSet();
  for (Instance i : type.getContained().values()) {
    set.add(i.get("database"));
  }
  output.print("databases=");
  boolean first = true;
  for (String database : set) {
     if (first) {
         first = false;
     } else {
         output.print(',');
     }
     output.print(database);
  }

  output.print("\n\n");
  String[] display = new String[]{"port","mode","username","password","jdbcUrl"};
   for (String key : set)
   {
      Context c = new Context(null, "type=datasource,database=" + key);
      List matches = database.query(c);
      for (Instance i : matches) {
        if (i.get("database") == null || i.get("env") == null || i.get("host") == null) {
           continue;
        }
        Value envValue = i.getValue("env");
        for (String envName : envValue.values()) {
           String prefix = i.get("database") + "." + envName + "." + i.get("host");

           output.format("%s.database.%s=%s\n", new Object[]{ prefix, "host", i.get("hostName","") });

           for (String key : display) {
              output.format("%s.database.%s=%s\n", new Object[]{ prefix, key, i.get(key,"") });
           }
           output.println("");
        }
      }
   }
#}
#
# Application instances by Environment.Host
#
{#
 Type type = database.getContained().get("host");
 Set set = new TreeSet();
 for (Instance i : type.getContained().values()) {
   set.add(i.get("env"));
 }
 output.print("environments=");
 boolean first = true;
 for (String env : set) {
    if (first) {
        first = false;
    } else {
        output.print(',');
    }
    output.print(env);
 }

 output.print("\n\n");

 for (String key : set)
 {
    Context c = new Context(null, "type=host,env=" + key);
    List matches = database.query(c);
    for (Instance i : matches) {
       String prefix = i.get("env") + "." + i.get("instance") + ".";
       output.println(prefix + "name=" + i.get("serverName"));
       output.println(prefix + "host=" + i.get("serverHost"));
       output.println(prefix + "domain=" + database.getContained().get("environment").getContained().get(key).get("domain"));
       output.println(prefix + "apps=" + i.get("apps",""));
       output.print('\n');
    }
 }

#}
